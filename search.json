[{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/big_crush_test.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"`sitmo`'s BigCrush Results","text":"TestU01 software library produced Pierre L’Ecuyer Richard Simard written C provides collection utilities empirical statistical testing uniform random number generators (RNGs). suite able provide information quality randomness psuedo-random number generator can produce. able four different branches: Implementing (pre-programmed) RNGs; implementing specific statistical tests; implementing batteries statistical tests; Applying tests entire families RNGs. TestU01 offers several batteries tests including “Small Crush” (consists 10 tests), “Crush” (96 tests), “Big Crush” (106 tests). later test extensive previous ones. information tests available, please consult TestU01 userguide. results “Big Crush” test presented next.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/big_crush_test.html","id":"results-of-the-test","dir":"Articles","previous_headings":"","what":"Results of the Test","title":"`sitmo`'s BigCrush Results","text":"Running Big Crush test TestU01 suite yielded complete pass rate (e.g “tests passed”) specifics 103 tests detailed .","code":"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                  Starting BigCrush                  Version: TestU01 1.2.3 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     *********************************************************** Test smarsa_SerialOver calling smultin_MultinomialOver   *********************************************************** HOST = Sitmos-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N =  1,  n = 1000000000,  r =  0,   d =  256,   t =  3,        Sparse =  FALSE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =           16777216        Expected number per cell =   59.604645        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =   0.0083558402,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          : 16711680 Value of the statistic                : 1.67e+7 p-value of test                       :    0.59     ----------------------------------------------- CPU time used                    :  00:01:04.53   Generator state:         *********************************************************** Test smarsa_SerialOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N =  1,  n = 1000000000,  r = 22,   d =  256,   t =  3,        Sparse =  FALSE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =           16777216        Expected number per cell =   59.604645        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =   0.0083558402,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          : 16711680 Value of the statistic                : 1.67e+7 p-value of test                       :    0.42     ----------------------------------------------- CPU time used                    :  00:01:08.78   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  0,   d = 2097152,   t =  2,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1445 p-value of test                       :    0.02   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334565   j =  1                              :        599997110   j =  2                              :             1445   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:03:49.93   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  9,   d = 2097152,   t =  2,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1294 p-value of test                       :    0.97   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334414   j =  1                              :        599997412   j =  2                              :             1294   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:03:44.17   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  0,   d = 16384,   t =  3,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1341 p-value of test                       :    0.73   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334461   j =  1                              :        599997318   j =  2                              :             1341   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:43.85   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r = 16,   d = 16384,   t =  3,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1401 p-value of test                       :    0.16   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334521   j =  1                              :        599997198   j =  2                              :             1401   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:38.33   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  0,   d =   64,   t =  7,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1363 p-value of test                       :    0.51   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334483   j =  1                              :        599997274   j =  2                              :             1363   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:45.35   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r = 24,   d =   64,   t =  7,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1312 p-value of test                       :    0.92   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334432   j =  1                              :        599997376   j =  2                              :             1312   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:41.50   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  0,   d =    8,   t = 14,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1373 p-value of test                       :    0.41   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334493   j =  1                              :        599997254   j =  2                              :             1373   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:45.18   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r = 27,   d =    8,   t = 14,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1360 p-value of test                       :    0.54   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334480   j =  1                              :        599997280   j =  2                              :             1360   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:41.13   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r =  0,   d =    4,   t = 21,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1355 p-value of test                       :    0.59   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334475   j =  1                              :        599997290   j =  2                              :             1355   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:43.98   Generator state:         *********************************************************** Test smarsa_CollisionOver calling smultin_MultinomialOver   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_MultinomialOver test: -----------------------------------------------    N = 30,  n = 20000000,  r = 28,   d =    4,   t = 21,        Sparse =   TRUE          GenerCell = smultin_GenerCellSerial        Number of cells = d^t =      4398046511104        Expected number per cell =  1 /  219902.33        EColl = n^2 / (2k) =  45.47473509        Hashing =   TRUE          Collision test          CollisionOver:   density = n / k =  1 /  219902.33        Expected number of collisions = Mu =      45.47     ----------------------------------------------- Results of CollisionOver test:   POISSON approximation                 : Expected number of collisions = N*Mu  :     1364.24 Observed number of collisions         :     1387 p-value of test                       :    0.27   ----------------------------- Total number of cells containing j balls     j =  0                              :  131940795334507   j =  1                              :        599997226   j =  2                              :             1387   j =  3                              :                0   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:39.21   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 100,  n = 10000000,  r =  0,    d = 2147483648,    t = 2,    p = 1           Number of cells = d^t = 4611686018427387904       Lambda = Poisson mean =      54.2101     ---------------------------------------------------- Total expected number = N*Lambda      :    5421.01 Total observed number                 :    5379 p-value of test                       :    0.71     ----------------------------------------------- CPU time used                    :  00:03:58.55   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 20000000,  r =  0,    d = 2097152,    t = 3,    p = 1           Number of cells = d^t = 9223372036854775808       Lambda = Poisson mean =     216.8404     ---------------------------------------------------- Total expected number = N*Lambda      :    4336.81 Total observed number                 :    4347 p-value of test                       :    0.44     ----------------------------------------------- CPU time used                    :  00:01:44.53   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 30000000,  r = 14,    d = 65536,    t = 4,    p = 1           Number of cells = d^t = 18446744073709551616       Lambda = Poisson mean =     365.9182     ---------------------------------------------------- Total expected number = N*Lambda      :    7318.36 Total observed number                 :    7383 p-value of test                       :    0.23     ----------------------------------------------- CPU time used                    :  00:02:48.51   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 20000000,  r =  0,    d = 512,    t = 7,    p = 1           Number of cells = d^t = 9223372036854775808       Lambda = Poisson mean =     216.8404     ---------------------------------------------------- Total expected number = N*Lambda      :    4336.81 Total observed number                 :    4299 p-value of test                       :    0.71     ----------------------------------------------- CPU time used                    :  00:01:59.94   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 20000000,  r =  7,    d = 512,    t = 7,    p = 1           Number of cells = d^t = 9223372036854775808       Lambda = Poisson mean =     216.8404     ---------------------------------------------------- Total expected number = N*Lambda      :    4336.81 Total observed number                 :    4377 p-value of test                       :    0.27     ----------------------------------------------- CPU time used                    :  00:02:05.76   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 30000000,  r = 14,    d = 256,    t = 8,    p = 1           Number of cells = d^t = 18446744073709551616       Lambda = Poisson mean =     365.9182     ---------------------------------------------------- Total expected number = N*Lambda      :    7318.36 Total observed number                 :    7325 p-value of test                       :    0.47     ----------------------------------------------- CPU time used                    :  00:03:19.07   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 30000000,  r = 22,    d = 256,    t = 8,    p = 1           Number of cells = d^t = 18446744073709551616       Lambda = Poisson mean =     365.9182     ---------------------------------------------------- Total expected number = N*Lambda      :    7318.36 Total observed number                 :    7294 p-value of test                       :    0.61     ----------------------------------------------- CPU time used                    :  00:03:19.19   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 30000000,  r =  0,    d = 16,    t = 16,    p = 1           Number of cells = d^t = 18446744073709551616       Lambda = Poisson mean =     365.9182     ---------------------------------------------------- Total expected number = N*Lambda      :    7318.36 Total observed number                 :    7366 p-value of test                       :    0.29     ----------------------------------------------- CPU time used                    :  00:04:00.28   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_BirthdaySpacings test: -----------------------------------------------    N = 20,  n = 30000000,  r = 26,    d = 16,    t = 16,    p = 1           Number of cells = d^t = 18446744073709551616       Lambda = Poisson mean =     365.9182     ---------------------------------------------------- Total expected number = N*Lambda      :    7318.36 Total observed number                 :    7357 p-value of test                       :    0.33     ----------------------------------------------- CPU time used                    :  00:04:19.81   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     snpair_ClosePairs test: -----------------------------------------------    N = 30,  n = 6000000,  r =  0,  t = 3,  p = 0,  m = 30,  Torus =  TRUE     --------------------------------------- Test based on the 2 nearest points (NP):   Stat. AD on the N values (NP)         :    0.30 p-value of test                       :    0.93     A2 test based on the spacings between the    successive jump times of process Y_n(t):   A2 test on the values of A2 (m-NP)    :    0.55 p-value of test                       :    0.69   Test on the Nm values of W_{n,i}(mNP1):    1.63 p-value of test                       :    0.15   Test on the jump times of Y    (superposition of Yn):   Expected number of jumps of Y = mN    :     900 Number of jumps of Y                  :     970 p-value of test                       :    0.01   Stat. AD (mNP2)                       :    1.27 p-value of test                       :    0.24   Stat. AD after spacings (mNP2-S)      :    1.48 p-value of test                       :    0.18   ----------------------------------------------- CPU time used                    :  00:02:35.76   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     snpair_ClosePairs test: -----------------------------------------------    N = 20,  n = 4000000,  r =  0,  t = 5,  p = 0,  m = 30,  Torus =  TRUE     --------------------------------------- Test based on the 2 nearest points (NP):   Stat. AD on the N values (NP)         :    1.33 p-value of test                       :    0.22     A2 test based on the spacings between the    successive jump times of process Y_n(t):   A2 test on the values of A2 (m-NP)    :    0.58 p-value of test                       :    0.67   Test on the Nm values of W_{n,i}(mNP1):    0.76 p-value of test                       :    0.51   Test on the jump times of Y    (superposition of Yn):   Expected number of jumps of Y = mN    :     600 Number of jumps of Y                  :     577 p-value of test                       :    0.82   Stat. AD (mNP2)                       :    1.31 p-value of test                       :    0.23   Stat. AD after spacings (mNP2-S)      :    0.81 p-value of test                       :    0.48   ----------------------------------------------- CPU time used                    :  00:01:45.47   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     snpair_ClosePairs test: -----------------------------------------------    N = 10,  n = 3000000,  r =  0,  t = 9,  p = 0,  m = 30,  Torus =  TRUE     --------------------------------------- Test based on the 2 nearest points (NP):   Stat. AD on the N values (NP)         :    0.52 p-value of test                       :    0.73     A2 test based on the spacings between the    successive jump times of process Y_n(t):   A2 test on the values of A2 (m-NP)    :    0.29 p-value of test                       :    0.94   Test on the Nm values of W_{n,i}(mNP1):    1.48 p-value of test                       :    0.18   Test on the jump times of Y    (superposition of Yn):   Expected number of jumps of Y = mN    :     300 Number of jumps of Y                  :     260 p-value of test                       :    0.99   Stat. AD (mNP2)                       :    0.71 p-value of test                       :    0.55   Stat. AD after spacings (mNP2-S)      :    0.62 p-value of test                       :    0.63   ----------------------------------------------- CPU time used                    :  00:02:55.40   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     snpair_ClosePairs test: -----------------------------------------------    N =  5,  n = 2000000,  r =  0,  t = 16,  p = 0,  m = 30,  Torus =  TRUE     --------------------------------------- Test based on the 2 nearest points (NP):   Stat. AD on the N values (NP)         :    1.24 p-value of test                       :    0.25     A2 test based on the spacings between the    successive jump times of process Y_n(t):   A2 test on the values of A2 (m-NP)    :    0.54 p-value of test                       :    0.70   Test on the Nm values of W_{n,i}(mNP1):    1.31 p-value of test                       :    0.23   Test on the jump times of Y    (superposition of Yn):   Expected number of jumps of Y = mN    :     150 Number of jumps of Y                  :     150 p-value of test                       :    0.51   Stat. AD (mNP2)                       :    3.70 p-value of test                       :    0.01   Stat. AD after spacings (mNP2-S)      :    0.89 p-value of test                       :    0.42   ----------------------------------------------- CPU time used                    :  00:03:22.78   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_SimpPoker test: -----------------------------------------------    N =  1,  n = 400000000,  r =  0,   d =    8,   k =    8     ----------------------------------------------- Number of degrees of freedom          :    7 Chi-square statistic                  :    5.92 p-value of test                       :    0.55   ----------------------------------------------- CPU time used                    :  00:00:59.10   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_SimpPoker test: -----------------------------------------------    N =  1,  n = 400000000,  r = 27,   d =    8,   k =    8     ----------------------------------------------- Number of degrees of freedom          :    7 Chi-square statistic                  :    3.46 p-value of test                       :    0.84   ----------------------------------------------- CPU time used                    :  00:01:09.35   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_SimpPoker test: -----------------------------------------------    N =  1,  n = 100000000,  r =  0,   d =   32,   k =   32     ----------------------------------------------- Number of degrees of freedom          :   18 Chi-square statistic                  :    9.52 p-value of test                       :    0.95   ----------------------------------------------- CPU time used                    :  00:01:02.60   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_SimpPoker test: -----------------------------------------------    N =  1,  n = 100000000,  r = 25,   d =   32,   k =   32     ----------------------------------------------- Number of degrees of freedom          :   18 Chi-square statistic                  :   14.29 p-value of test                       :    0.71   ----------------------------------------------- CPU time used                    :  00:01:13.81   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_CouponCollector test: -----------------------------------------------    N =  1,  n = 200000000,  r =  0,   d =    8     ----------------------------------------------- Number of degrees of freedom          :   54 Chi-square statistic                  :   44.18 p-value of test                       :    0.83   ----------------------------------------------- CPU time used                    :  00:01:16.02   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_CouponCollector test: -----------------------------------------------    N =  1,  n = 200000000,  r = 10,   d =    8     ----------------------------------------------- Number of degrees of freedom          :   54 Chi-square statistic                  :   47.86 p-value of test                       :    0.71   ----------------------------------------------- CPU time used                    :  00:01:28.55   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_CouponCollector test: -----------------------------------------------    N =  1,  n = 200000000,  r = 20,   d =    8     ----------------------------------------------- Number of degrees of freedom          :   54 Chi-square statistic                  :   50.86 p-value of test                       :    0.60   ----------------------------------------------- CPU time used                    :  00:01:28.60   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_CouponCollector test: -----------------------------------------------    N =  1,  n = 200000000,  r = 27,   d =    8     ----------------------------------------------- Number of degrees of freedom          :   54 Chi-square statistic                  :   58.93 p-value of test                       :    0.30   ----------------------------------------------- CPU time used                    :  00:01:28.68   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Gap test: -----------------------------------------------    N =  1,  n = 500000000,  r =  0,   Alpha =        0,   Beta  =   0.0625     ----------------------------------------------- Number of degrees of freedom          :  232 Chi-square statistic                  :  214.26 p-value of test                       :    0.79   ----------------------------------------------- CPU time used                    :  00:01:32.96   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Gap test: -----------------------------------------------    N =  1,  n = 300000000,  r = 25,   Alpha =        0,   Beta  =  0.03125     ----------------------------------------------- Number of degrees of freedom          :  434 Chi-square statistic                  :  397.76 p-value of test                       :    0.89   ----------------------------------------------- CPU time used                    :  00:02:06.14   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Gap test: -----------------------------------------------    N =  1,  n = 100000000,  r =  0,   Alpha =        0,   Beta  = 0.0078125     ----------------------------------------------- Number of degrees of freedom          : 1437 Chi-square statistic                  : 1481.41 p-value of test                       :    0.20   ----------------------------------------------- CPU time used                    :  00:02:13.51   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Gap test: -----------------------------------------------    N =  1,  n = 10000000,  r = 20,   Alpha =        0,   Beta  = 0.000976562     ----------------------------------------------- Number of degrees of freedom          : 7046 Chi-square statistic                  : 7166.64 p-value of test                       :    0.15   ----------------------------------------------- CPU time used                    :  00:02:08.09   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Run test: -----------------------------------------------    N =  5,  n = 1000000000,  r =  0,   Up = FALSE     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.50 p-value of test                       :    0.05   Kolmogorov-Smirnov- statistic = D-    :    0.14 p-value of test                       :    0.77   Anderson-Darling statistic = A2       :    2.25 p-value of test                       :    0.07   Test on the sum of all N observations Number of degrees of freedom          :   30 Chi-square statistic                  :   22.54 p-value of test                       :    0.83   ----------------------------------------------- CPU time used                    :  00:01:23.93   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_Run test: -----------------------------------------------    N = 10,  n = 1000000000,  r = 15,   Up =  TRUE     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.21 p-value of test                       :    0.35   Kolmogorov-Smirnov- statistic = D-    :    0.15 p-value of test                       :    0.59   Anderson-Darling statistic = A2       :    0.50 p-value of test                       :    0.75   Test on the sum of all N observations Number of degrees of freedom          :   60 Chi-square statistic                  :   58.53 p-value of test                       :    0.53   ----------------------------------------------- CPU time used                    :  00:03:11.42   Generator state:         *********************************************************** Test sknuth_Permutation calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N =  1,  n = 1000000000,  r =  5,   t =  3,        Sparse =  FALSE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =                  6        Expected number per cell =  1.6666667e+08        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =  2.5000002e-09,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          :    5 Value of the statistic                :    8.17 p-value of test                       :    0.15     ----------------------------------------------- CPU time used                    :  00:00:46.93   Generator state:         *********************************************************** Test sknuth_Permutation calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N =  1,  n = 1000000000,  r =  5,   t =  5,        Sparse =  FALSE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =                120        Expected number per cell =   8333333.3        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =  5.9500005e-08,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          :  119 Value of the statistic                :  108.58 p-value of test                       :    0.74     ----------------------------------------------- CPU time used                    :  00:01:35.02   Generator state:         *********************************************************** Test sknuth_Permutation calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N =  1,  n = 500000000,  r =  5,   t =  7,        Sparse =  FALSE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =               5040        Expected number per cell =   99206.349        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =  5.0390004e-06,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          : 5039 Value of the statistic                : 4810.30 p-value of test                       :    0.99     ----------------------------------------------- CPU time used                    :  00:01:24.63   Generator state:         *********************************************************** Test sknuth_Permutation calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N =  1,  n = 500000000,  r = 10,   t = 10,        Sparse =  FALSE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =            3628800        Expected number per cell =    137.7866        Hashing =  FALSE      For Delta > -1, we use the ChiSquare approximation    Correction factor of the ChiSquare:         Delta =     1,    Mu =   0.0036287993,    Sigma =          1   ----------------------------------------------- Test Results for Delta =   1.0000   Number of degrees of freedom          : 3628799 Value of the statistic                : 3.63e+6 p-value of test                       :    0.80     ----------------------------------------------- CPU time used                    :  00:03:06.50   Generator state:         *********************************************************** Test sknuth_CollisionPermut calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N = 20,  n = 20000000,  r =  0,   t = 14,        Sparse =   TRUE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =        87178291200        Expected number per cell =  1 /  4358.9146        EColl = n^2 / (2k) =   2294.14912        Hashing =   TRUE          Collision test,    Mu =      2293.9736,    Sigma =    47.8841   ----------------------------------------------- Test Results for Collisions   For the total number of collisions, we use       the Poisson approximation: Expected number of collisions = N*Mu  :    45879.47 Observed number of collisions         :    45892 p-value of test                       :    0.48     ----------------------------- Total number of cells containing j balls     j =  0                              :    1743165869892   j =  1                              :        399908218   j =  2                              :            45888   j =  3                              :                2   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:04:54.47   Generator state:         *********************************************************** Test sknuth_CollisionPermut calling smultin_Multinomial   *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smultin_Multinomial test: -----------------------------------------------    N = 20,  n = 20000000,  r = 10,   t = 14,        Sparse =   TRUE          GenerCell = smultin_GenerCellPermut        Number of cells = t! =        87178291200        Expected number per cell =  1 /  4358.9146        EColl = n^2 / (2k) =   2294.14912        Hashing =   TRUE          Collision test,    Mu =      2293.9736,    Sigma =    47.8841   ----------------------------------------------- Test Results for Collisions   For the total number of collisions, we use       the Poisson approximation: Expected number of collisions = N*Mu  :    45879.47 Observed number of collisions         :    45960 p-value of test                       :    0.35     ----------------------------- Total number of cells containing j balls     j =  0                              :    1743165869960   j =  1                              :        399908084   j =  2                              :            45952   j =  3                              :                4   j =  4                              :                0   j =  5                              :                0   ----------------------------------------------- CPU time used                    :  00:05:01.14   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_MaxOft test: -----------------------------------------------    N = 40,  n = 10000000,  r =  0,   d = 100000,   t =  8         Number of categories = 100000       Expected number per category  = 100.00     ----------------------------------------------- Test results for chi2 with 99999 degrees of freedom:   Kolmogorov-Smirnov+ statistic = D+    :    0.11 p-value of test                       :    0.35   Kolmogorov-Smirnov- statistic = D-    :   0.036 p-value of test                       :    0.88   Anderson-Darling statistic = A2       :    0.61 p-value of test                       :    0.64   Test on the sum of all N observations Number of degrees of freedom          : 3999960 Chi-square statistic                  : 4.00e+6 p-value of test                       :    0.77     ----------------------------------------------- Test results for Anderson-Darling:   Kolmogorov-Smirnov+ statistic = D+    :   0.091 p-value of test                       :    0.49   Kolmogorov-Smirnov- statistic = D-    :   0.054 p-value of test                       :    0.77   Anderson-Darling statistic = A2       :    0.41 p-value of test                       :    0.84     ----------------------------------------------- CPU time used                    :  00:01:45.23   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_MaxOft test: -----------------------------------------------    N = 30,  n = 10000000,  r =  0,   d = 100000,   t = 16         Number of categories = 100000       Expected number per category  = 100.00     ----------------------------------------------- Test results for chi2 with 99999 degrees of freedom:   Kolmogorov-Smirnov+ statistic = D+    :    0.13 p-value of test                       :    0.32   Kolmogorov-Smirnov- statistic = D-    :    0.17 p-value of test                       :    0.17   Anderson-Darling statistic = A2       :    1.26 p-value of test                       :    0.25   Test on the sum of all N observations Number of degrees of freedom          : 2999970 Chi-square statistic                  : 3.00e+6 p-value of test                       :    0.40     ----------------------------------------------- Test results for Anderson-Darling:   Kolmogorov-Smirnov+ statistic = D+    :    0.19 p-value of test                       :    0.11   Kolmogorov-Smirnov- statistic = D-    :   0.014 p-value of test                       :    0.98   Anderson-Darling statistic = A2       :    1.61 p-value of test                       :    0.15     ----------------------------------------------- CPU time used                    :  00:01:43.48   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_MaxOft test: -----------------------------------------------    N = 20,  n = 10000000,  r =  0,   d = 100000,   t = 24         Number of categories = 100000       Expected number per category  = 100.00     ----------------------------------------------- Test results for chi2 with 99999 degrees of freedom:   Kolmogorov-Smirnov+ statistic = D+    :    0.15 p-value of test                       :    0.38   Kolmogorov-Smirnov- statistic = D-    :    0.12 p-value of test                       :    0.54   Anderson-Darling statistic = A2       :    0.55 p-value of test                       :    0.69   Test on the sum of all N observations Number of degrees of freedom          : 1999980 Chi-square statistic                  : 2.00e+6 p-value of test                       :    0.64     ----------------------------------------------- Test results for Anderson-Darling:   Kolmogorov-Smirnov+ statistic = D+    :   0.040 p-value of test                       :    0.91   Kolmogorov-Smirnov- statistic = D-    :    0.19 p-value of test                       :    0.23   Anderson-Darling statistic = A2       :    0.94 p-value of test                       :    0.39     ----------------------------------------------- CPU time used                    :  00:01:27.73   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sknuth_MaxOft test: -----------------------------------------------    N = 20,  n = 10000000,  r =  0,   d = 100000,   t = 32         Number of categories = 100000       Expected number per category  = 100.00     ----------------------------------------------- Test results for chi2 with 99999 degrees of freedom:   Kolmogorov-Smirnov+ statistic = D+    :    0.12 p-value of test                       :    0.51   Kolmogorov-Smirnov- statistic = D-    :   0.100 p-value of test                       :    0.63   Anderson-Darling statistic = A2       :    0.49 p-value of test                       :    0.75   Test on the sum of all N observations Number of degrees of freedom          : 1999980 Chi-square statistic                  : 2.00e+6 p-value of test                       :    0.64     ----------------------------------------------- Test results for Anderson-Darling:   Kolmogorov-Smirnov+ statistic = D+    :    0.10 p-value of test                       :    0.61   Kolmogorov-Smirnov- statistic = D-    :    0.16 p-value of test                       :    0.33   Anderson-Darling statistic = A2       :    0.79 p-value of test                       :    0.48     ----------------------------------------------- CPU time used                    :  00:01:43.31   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleProd test: -----------------------------------------------    N = 40,  n = 10000000,  r =  0,   t = 8     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.18 p-value of test                       :    0.06   Kolmogorov-Smirnov- statistic = D-    :   0.049 p-value of test                       :    0.80   Anderson-Darling statistic = A2       :    1.90 p-value of test                       :    0.10   ----------------------------------------------- CPU time used                    :  00:01:54.64   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleProd test: -----------------------------------------------    N = 20,  n = 10000000,  r =  0,   t = 16     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.24 p-value of test                       :    0.08   Kolmogorov-Smirnov- statistic = D-    :   0.043 p-value of test                       :    0.90   Anderson-Darling statistic = A2       :    2.22 p-value of test                       :    0.07   ----------------------------------------------- CPU time used                    :  00:01:29.65   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleProd test: -----------------------------------------------    N = 20,  n = 10000000,  r =  0,   t = 24     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.23 p-value of test                       :    0.10   Kolmogorov-Smirnov- statistic = D-    :   0.012 p-value of test                       :    0.98   Anderson-Darling statistic = A2       :    1.69 p-value of test                       :    0.14   ----------------------------------------------- CPU time used                    :  00:02:04.43   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleMean test: -----------------------------------------------    N = 20000000,  n = 30,  r =  0     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    : 1.93e-4 p-value of test                       :    0.22   Kolmogorov-Smirnov- statistic = D-    : 7.01e-5 p-value of test                       :    0.82   Anderson-Darling statistic = A2       :    0.50 p-value of test                       :    0.74   ----------------------------------------------- CPU time used                    :  00:00:15.09   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleMean test: -----------------------------------------------    N = 20000000,  n = 30,  r = 10     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    : 1.37e-4 p-value of test                       :    0.47   Kolmogorov-Smirnov- statistic = D-    : 1.31e-4 p-value of test                       :    0.50   Anderson-Darling statistic = A2       :    0.49 p-value of test                       :    0.76   ----------------------------------------------- CPU time used                    :  00:00:15.52   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleCorr test: -----------------------------------------------    N =  1,  n = 2000000000,  r =  0,   k = 1     ----------------------------------------------- Normal statistic                      :   -1.75 p-value of test                       :    0.96   ----------------------------------------------- CPU time used                    :  00:00:23.87   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SampleCorr test: -----------------------------------------------    N =  1,  n = 2000000000,  r =  0,   k = 2     ----------------------------------------------- Normal statistic                      :    1.09 p-value of test                       :    0.14   ----------------------------------------------- CPU time used                    :  00:00:23.96   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_AppearanceSpacings test: -----------------------------------------------    N =  1,   Q = 10000000,   K = 1000000000,   r = 0,   s = 3,   L = 15      Sequences of n = (K + Q)L =  15150000000 bits    Q = 10000000 initialization blocks    K = 1000000000 blocks for the test    the blocks have L = 15 bits       ----------------------------------------------- Normal statistic                      :   -0.31 p-value of test                       :    0.62   ----------------------------------------------- CPU time used                    :  00:01:09.11   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_AppearanceSpacings test: -----------------------------------------------    N =  1,   Q = 10000000,   K = 1000000000,   r = 27,   s = 3,   L = 15      Sequences of n = (K + Q)L =  15150000000 bits    Q = 10000000 initialization blocks    K = 1000000000 blocks for the test    the blocks have L = 15 bits       ----------------------------------------------- Normal statistic                      :   -0.77 p-value of test                       :    0.78   ----------------------------------------------- CPU time used                    :  00:01:12.02   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r =  0,  k = 256,  Alpha =      0,  Beta =   0.25     ----------------------------------------------- Number of degrees of freedom          :   67 Chi-square statistic                  :   53.51 p-value of test                       :    0.88   ----------------------------------------------- CPU time used                    :  00:00:53.06   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r = 20,  k = 256,  Alpha =      0,  Beta =   0.25     ----------------------------------------------- Number of degrees of freedom          :   67 Chi-square statistic                  :   76.46 p-value of test                       :    0.20   ----------------------------------------------- CPU time used                    :  00:01:05.73   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r = 28,  k = 256,  Alpha =      0,  Beta =   0.25     ----------------------------------------------- Number of degrees of freedom          :   67 Chi-square statistic                  :   66.46 p-value of test                       :    0.50   ----------------------------------------------- CPU time used                    :  00:01:05.79   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r =  0,  k = 256,  Alpha =      0,  Beta = 0.0625     ----------------------------------------------- Number of degrees of freedom          :   37 Chi-square statistic                  :   32.57 p-value of test                       :    0.68   ----------------------------------------------- CPU time used                    :  00:00:53.05   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r = 10,  k = 256,  Alpha =      0,  Beta = 0.0625     ----------------------------------------------- Number of degrees of freedom          :   37 Chi-square statistic                  :   53.95 p-value of test                       :    0.04   ----------------------------------------------- CPU time used                    :  00:01:05.79   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_WeightDistrib test: -----------------------------------------------    N =  1,  n = 20000000,  r = 26,  k = 256,  Alpha =      0,  Beta = 0.0625     ----------------------------------------------- Number of degrees of freedom          :   37 Chi-square statistic                  :   18.95 p-value of test                       :    0.9939   ----------------------------------------------- CPU time used                    :  00:01:05.73   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     svaria_SumCollector test: -----------------------------------------------    N =  1,  n = 500000000,  r =  0,   g = 10     ----------------------------------------------- Number of degrees of freedom          :   29 Chi-square statistic                  :   22.00 p-value of test                       :    0.82   ----------------------------------------------- CPU time used                    :  00:01:58.36   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N = 10,  n = 1000000,  r =  0,    s = 5,    L = 30,    k = 30     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.27 p-value of test                       :    0.19   Kolmogorov-Smirnov- statistic = D-    :    0.16 p-value of test                       :    0.56   Anderson-Darling statistic = A2       :    0.78 p-value of test                       :    0.50   Test on the sum of all N observations Number of degrees of freedom          :   40 Chi-square statistic                  :   32.66 p-value of test                       :    0.79   ----------------------------------------------- CPU time used                    :  00:01:16.26   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N = 10,  n = 1000000,  r = 25,    s = 5,    L = 30,    k = 30     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.19 p-value of test                       :    0.42   Kolmogorov-Smirnov- statistic = D-    :    0.14 p-value of test                       :    0.62   Anderson-Darling statistic = A2       :    0.49 p-value of test                       :    0.75   Test on the sum of all N observations Number of degrees of freedom          :   40 Chi-square statistic                  :   34.46 p-value of test                       :    0.72   ----------------------------------------------- CPU time used                    :  00:01:16.23   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N =  1,  n = 5000,  r =  0,    s = 4,    L = 1000,    k = 1000     ----------------------------------------------- Number of degrees of freedom          :    3 Chi-square statistic                  :    0.73 p-value of test                       :    0.87   ----------------------------------------------- CPU time used                    :  00:03:44.79   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N =  1,  n = 5000,  r = 26,    s = 4,    L = 1000,    k = 1000     ----------------------------------------------- Number of degrees of freedom          :    3 Chi-square statistic                  :    1.12 p-value of test                       :    0.77   ----------------------------------------------- CPU time used                    :  00:03:44.77   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N =  1,  n = 80,  r = 15,    s = 15,    L = 5000,    k = 5000     ----------------------------------------------- Number of degrees of freedom          :    2 Chi-square statistic                  :    6.04 p-value of test                       :    0.05   ----------------------------------------------- CPU time used                    :  00:03:28.23   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_MatrixRank test: -----------------------------------------------    N =  1,  n = 80,  r =  0,    s = 30,    L = 5000,    k = 5000     ----------------------------------------------- Number of degrees of freedom          :    2 Chi-square statistic                  :   0.075 p-value of test                       :    0.96   ----------------------------------------------- CPU time used                    :  00:02:51.20   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_Savir2 test: -----------------------------------------------    N = 10,  n = 10000000,  r = 10,    m = 1048576,    t = 30     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :   0.027 p-value of test                       :    0.97   Kolmogorov-Smirnov- statistic = D-    :    0.41 p-value of test                       :    0.02   Anderson-Darling statistic = A2       :    2.58 p-value of test                       :    0.05   Test on the sum of all N observations Number of degrees of freedom          :  130 Chi-square statistic                  :  164.06 p-value of test                       :    0.02   ----------------------------------------------- CPU time used                    :  00:00:37.67   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     smarsa_GCD test: -----------------------------------------------    N = 10,  n = 50000000,  r =  0,   s = 30     ----------------------------------------------- Test results for GCD values:   Kolmogorov-Smirnov+ statistic = D+    :    0.34 p-value of test                       :    0.08   Kolmogorov-Smirnov- statistic = D-    :   0.026 p-value of test                       :    0.97   Anderson-Darling statistic = A2       :    1.62 p-value of test                       :    0.15   Test on the sum of all N observations Number of degrees of freedom          : 17430 Chi-square statistic                  :17122.72 p-value of test                       :    0.95       ----------------------------------------------- CPU time used                    :  00:01:54.05   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 100000000,  r =  0,   s = 5,   L0 =   50,   L1 =   50       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :   36 ChiSquare statistic                   :   30.27 p-value of test                       :    0.74     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :   35 ChiSquare statistic                   :   34.79 p-value of test                       :    0.48     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          :   25 ChiSquare statistic                   :   34.88 p-value of test                       :    0.09     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :   24 ChiSquare statistic                   :   25.02 p-value of test                       :    0.40     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :   17 ChiSquare statistic                   :   24.18 p-value of test                       :    0.11     ----------------------------------------------- CPU time used                    :  00:00:47.70   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 100000000,  r = 25,   s = 5,   L0 =   50,   L1 =   50       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :   36 ChiSquare statistic                   :   26.87 p-value of test                       :    0.86     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :   35 ChiSquare statistic                   :   25.33 p-value of test                       :    0.89     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          :   25 ChiSquare statistic                   :   40.08 p-value of test                       :    0.03     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :   24 ChiSquare statistic                   :   19.29 p-value of test                       :    0.74     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :   17 ChiSquare statistic                   :   11.45 p-value of test                       :    0.83     ----------------------------------------------- CPU time used                    :  00:00:48.73   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 10000000,  r =  0,   s = 10,   L0 = 1000,   L1 = 1000       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :  146 ChiSquare statistic                   :  177.55 p-value of test                       :    0.04     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :  146 ChiSquare statistic                   :  117.36 p-value of test                       :    0.96     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          :  500 ChiSquare statistic                   :  438.13 p-value of test                       :    0.98     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :  136 ChiSquare statistic                   :  119.76 p-value of test                       :    0.84     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :   74 ChiSquare statistic                   :   86.45 p-value of test                       :    0.15     ----------------------------------------------- CPU time used                    :  00:01:06.36   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 10000000,  r = 20,   s = 10,   L0 = 1000,   L1 = 1000       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :  146 ChiSquare statistic                   :  128.52 p-value of test                       :    0.85     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :  146 ChiSquare statistic                   :  139.85 p-value of test                       :    0.63     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          :  500 ChiSquare statistic                   :  509.00 p-value of test                       :    0.38     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :  136 ChiSquare statistic                   :  125.25 p-value of test                       :    0.74     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :   74 ChiSquare statistic                   :   68.45 p-value of test                       :    0.66     ----------------------------------------------- CPU time used                    :  00:01:08.10   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 1000000,  r =  0,   s = 15,   L0 = 10000,   L1 = 10000       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :  384 ChiSquare statistic                   :  396.65 p-value of test                       :    0.32     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :  384 ChiSquare statistic                   :  387.98 p-value of test                       :    0.43     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          : 5000 ChiSquare statistic                   : 4987.07 p-value of test                       :    0.55     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :  378 ChiSquare statistic                   :  370.70 p-value of test                       :    0.60     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :  200 ChiSquare statistic                   :  202.48 p-value of test                       :    0.44     ----------------------------------------------- CPU time used                    :  00:00:57.94   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     swalk_RandomWalk1 test: -----------------------------------------------    N =  1,  n = 1000000,  r = 15,   s = 15,   L0 = 10000,   L1 = 10000       ----------------------------------------------- Test on the values of the Statistic H   Number of degrees of freedom          :  384 ChiSquare statistic                   :  370.10 p-value of test                       :    0.69     ----------------------------------------------- Test on the values of the Statistic M   Number of degrees of freedom          :  384 ChiSquare statistic                   :  369.10 p-value of test                       :    0.70     ----------------------------------------------- Test on the values of the Statistic J   Number of degrees of freedom          : 5000 ChiSquare statistic                   : 4890.41 p-value of test                       :    0.86     ----------------------------------------------- Test on the values of the Statistic R   Number of degrees of freedom          :  378 ChiSquare statistic                   :  357.68 p-value of test                       :    0.77     ----------------------------------------------- Test on the values of the Statistic C   Number of degrees of freedom          :  200 ChiSquare statistic                   :  180.54 p-value of test                       :    0.83     ----------------------------------------------- CPU time used                    :  00:00:58.79   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     scomp_LinearComp test: -----------------------------------------------    N =  1,  n = 400020,  r =  0,    s = 1       ----------------------------------------------- Number of degrees of freedom          :   12 Chi2 statistic for size of jumps      :   12.60 p-value of test                       :    0.40     ----------------------------------------------- Normal statistic for number of jumps  :    2.51 p-value of test                       :  6.1e-3       ----------------------------------------------- CPU time used                    :  00:02:43.68   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     scomp_LinearComp test: -----------------------------------------------    N =  1,  n = 400020,  r = 29,    s = 1       ----------------------------------------------- Number of degrees of freedom          :   12 Chi2 statistic for size of jumps      :    8.18 p-value of test                       :    0.77     ----------------------------------------------- Normal statistic for number of jumps  :   -1.55 p-value of test                       :    0.94       ----------------------------------------------- CPU time used                    :  00:02:43.05   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     scomp_LempelZiv test: -----------------------------------------------    N = 10,  n = 134217728,  r =  0,   s =   30,   k =   27     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.23 p-value of test                       :    0.31   Kolmogorov-Smirnov- statistic = D-    :    0.13 p-value of test                       :    0.65   Anderson-Darling statistic = A2       :    0.54 p-value of test                       :    0.70   Tests on the sum of all N observations Standardized normal statistic         :   -0.32 p-value of test                       :    0.63   Sample variance                       :    1.17 p-value of test                       :    0.31   ----------------------------------------------- CPU time used                    :  00:00:54.70   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     scomp_LempelZiv test: -----------------------------------------------    N = 10,  n = 134217728,  r = 15,   s =   15,   k =   27     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.20 p-value of test                       :    0.40   Kolmogorov-Smirnov- statistic = D-    :   0.015 p-value of test                       :    0.98   Anderson-Darling statistic = A2       :    0.73 p-value of test                       :    0.53   Tests on the sum of all N observations Standardized normal statistic         :   -1.20 p-value of test                       :    0.88   Sample variance                       :    0.89 p-value of test                       :    0.53   ----------------------------------------------- CPU time used                    :  00:00:55.27   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sspectral_Fourier3 test: -----------------------------------------------    N = 100000,  n = 16384,  r =  0,   s =    3,   k =   14     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :   0.021 p-value of test                       :    0.02   Kolmogorov-Smirnov- statistic = D-    : 9.76e-3 p-value of test                       :    0.46   Anderson-Darling statistic = A2       :    2.29 p-value of test                       :    0.06   ----------------------------------------------- CPU time used                    :  00:00:39.04   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sspectral_Fourier3 test: -----------------------------------------------    N = 100000,  n = 16384,  r = 27,   s =    3,   k =   14     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :   0.016 p-value of test                       :    0.11   Kolmogorov-Smirnov- statistic = D-    : 4.76e-3 p-value of test                       :    0.83   Anderson-Darling statistic = A2       :    1.57 p-value of test                       :    0.16   ----------------------------------------------- CPU time used                    :  00:00:39.54   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_LongestHeadRun test: -----------------------------------------------    N =  1,  n = 1000,  r =  0,   s = 3,   L = 10000020     ----------------------------------------------- Number of degrees of freedom          :    8 Chi-square statistic                  :    9.12 p-value of test                       :    0.33   ----------------------------------------------- Global longest run of 1               :   35.00 p-value of test                       :    0.14       ----------------------------------------------- CPU time used                    :  00:01:47.05   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_LongestHeadRun test: -----------------------------------------------    N =  1,  n = 1000,  r = 27,   s = 3,   L = 10000020     ----------------------------------------------- Number of degrees of freedom          :    8 Chi-square statistic                  :    4.78 p-value of test                       :    0.78   ----------------------------------------------- Global longest run of 1               :   35.00 p-value of test                       :    0.14       ----------------------------------------------- CPU time used                    :  00:01:50.10   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_PeriodsInStrings test: -----------------------------------------------    N = 10,  n = 500000000,  r =  0,   s =   10     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.30 p-value of test                       :    0.13   Kolmogorov-Smirnov- statistic = D-    :    0.13 p-value of test                       :    0.68   Anderson-Darling statistic = A2       :    0.84 p-value of test                       :    0.45   Test on the sum of all N observations Number of degrees of freedom          :  200 Chi-square statistic                  :  183.59 p-value of test                       :    0.79   ----------------------------------------------- CPU time used                    :  00:02:51.45   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_PeriodsInStrings test: -----------------------------------------------    N = 10,  n = 500000000,  r = 20,   s =   10     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.25 p-value of test                       :    0.25   Kolmogorov-Smirnov- statistic = D-    :    0.17 p-value of test                       :    0.51   Anderson-Darling statistic = A2       :    0.50 p-value of test                       :    0.74   Test on the sum of all N observations Number of degrees of freedom          :  200 Chi-square statistic                  :  195.89 p-value of test                       :    0.57   ----------------------------------------------- CPU time used                    :  00:02:56.45   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingWeight2 test: -----------------------------------------------    N = 10,  n = 1000000000,  r =  0,   s = 3,   L = 1000000     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.15 p-value of test                       :    0.57   Kolmogorov-Smirnov- statistic = D-    :    0.19 p-value of test                       :    0.43   Anderson-Darling statistic = A2       :    1.02 p-value of test                       :    0.34   Test on the sum of all N observations Number of degrees of freedom          : 10000 Chi-square statistic                  :10157.86 p-value of test                       :    0.13   ----------------------------------------------- CPU time used                    :  00:00:57.75   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingWeight2 test: -----------------------------------------------    N = 10,  n = 1000000000,  r = 27,   s = 3,   L = 1000000     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.18 p-value of test                       :    0.48   Kolmogorov-Smirnov- statistic = D-    :    0.38 p-value of test                       :    0.04   Anderson-Darling statistic = A2       :    1.47 p-value of test                       :    0.18   Test on the sum of all N observations Number of degrees of freedom          : 10000 Chi-square statistic                  :10121.19 p-value of test                       :    0.20   ----------------------------------------------- CPU time used                    :  00:01:01.20   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingCorr test: -----------------------------------------------    N =  1,  n = 1000000000,  r = 10,   s = 10,   L = 30       ----------------------------------------------- Normal statistic                      :    1.36 p-value of test                       :    0.09   ----------------------------------------------- CPU time used                    :  00:01:13.01   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingCorr test: -----------------------------------------------    N =  1,  n = 100000000,  r = 10,   s = 10,   L = 300       ----------------------------------------------- Normal statistic                      :    0.36 p-value of test                       :    0.36   ----------------------------------------------- CPU time used                    :  00:01:09.29   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingCorr test: -----------------------------------------------    N =  1,  n = 100000000,  r = 10,   s = 10,   L = 1200       ----------------------------------------------- Normal statistic                      :   -0.12 p-value of test                       :    0.55   ----------------------------------------------- CPU time used                    :  00:04:34.86   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N = 10,  n = 30000000,  r =  0,   s = 3,   L = 30,   d = 0       Counters with expected numbers >= 10 -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.24 p-value of test                       :    0.28   Kolmogorov-Smirnov- statistic = D-    :    0.13 p-value of test                       :    0.65   Anderson-Darling statistic = A2       :    0.74 p-value of test                       :    0.53   Test on the sum of all N observations Number of degrees of freedom          : 4890 Chi-square statistic                  : 4850.28 p-value of test                       :    0.65   ----------------------------------------------- CPU time used                    :  00:01:53.80   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N = 10,  n = 30000000,  r = 27,   s = 3,   L = 30,   d = 0       Counters with expected numbers >= 10 -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.25 p-value of test                       :    0.24   Kolmogorov-Smirnov- statistic = D-    :    0.11 p-value of test                       :    0.74   Anderson-Darling statistic = A2       :    0.66 p-value of test                       :    0.59   Test on the sum of all N observations Number of degrees of freedom          : 4890 Chi-square statistic                  : 4816.01 p-value of test                       :    0.77   ----------------------------------------------- CPU time used                    :  00:01:59.57   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N =  1,  n = 30000000,  r =  0,   s = 4,   L = 300,   d = 0       Counters with expected numbers >= 10 ----------------------------------------------- Number of degrees of freedom          : 4117 Chi-square statistic                  : 4183.44 p-value of test                       :    0.23   ----------------------------------------------- CPU time used                    :  00:01:25.02   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N =  1,  n = 30000000,  r = 26,   s = 4,   L = 300,   d = 0       Counters with expected numbers >= 10 ----------------------------------------------- Number of degrees of freedom          : 4117 Chi-square statistic                  : 4147.28 p-value of test                       :    0.37   ----------------------------------------------- CPU time used                    :  00:01:29.27   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N =  1,  n = 10000000,  r =  0,   s = 5,   L = 1200,   d = 0       Counters with expected numbers >= 10 ----------------------------------------------- Number of degrees of freedom          : 11825 Chi-square statistic                  :11803.57 p-value of test                       :    0.55   ----------------------------------------------- CPU time used                    :  00:01:33.79   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_HammingIndep test: -----------------------------------------------    N =  1,  n = 10000000,  r = 25,   s = 5,   L = 1200,   d = 0       Counters with expected numbers >= 10 ----------------------------------------------- Number of degrees of freedom          : 11825 Chi-square statistic                  :11791.39 p-value of test                       :    0.58   ----------------------------------------------- CPU time used                    :  00:01:38.25   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_Run test: -----------------------------------------------    N =  1,  n = 2000000000,  r =  0,   s =    3     ----------------------------------------------- Total number of 1 runs:  2000000000   Number of degrees of freedom          :   54 Chi2 statistic for number of runs     :   62.56 p-value of test                       :    0.20     ----------------------------------------------- Total number of bits:  7999957470   Normal statistic for number of bits   :   -0.34 p-value of test                       :    0.63       ----------------------------------------------- CPU time used                    :  00:01:16.00   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_Run test: -----------------------------------------------    N =  1,  n = 2000000000,  r = 27,   s =    3     ----------------------------------------------- Total number of 1 runs:  2000000000   Number of degrees of freedom          :   54 Chi2 statistic for number of runs     :   65.11 p-value of test                       :    0.14     ----------------------------------------------- Total number of bits:  7999956321   Normal statistic for number of bits   :   -0.35 p-value of test                       :    0.64       ----------------------------------------------- CPU time used                    :  00:01:18.57   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_AutoCor test: -----------------------------------------------    N = 10,  n = 1000000030,  r =  0,   s = 3,   d = 1     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.28 p-value of test                       :    0.18   Kolmogorov-Smirnov- statistic = D-    :    0.10 p-value of test                       :    0.76   Anderson-Darling statistic = A2       :    0.50 p-value of test                       :    0.74   Tests on the sum of all N observations Standardized normal statistic         :   -0.51 p-value of test                       :    0.69   Sample variance                       :    0.71 p-value of test                       :    0.70   ----------------------------------------------- CPU time used                    :  00:02:49.27   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_AutoCor test: -----------------------------------------------    N = 10,  n = 1000000029,  r =  0,   s = 3,   d = 3     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :    0.13 p-value of test                       :    0.66   Kolmogorov-Smirnov- statistic = D-    :    0.17 p-value of test                       :    0.51   Anderson-Darling statistic = A2       :    0.30 p-value of test                       :    0.94   Tests on the sum of all N observations Standardized normal statistic         :   0.069 p-value of test                       :    0.47   Sample variance                       :    0.68 p-value of test                       :    0.73   ----------------------------------------------- CPU time used                    :  00:02:30.81   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_AutoCor test: -----------------------------------------------    N = 10,  n = 1000000030,  r = 27,   s = 3,   d = 1     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :   0.095 p-value of test                       :    0.78   Kolmogorov-Smirnov- statistic = D-    :    0.30 p-value of test                       :    0.14   Anderson-Darling statistic = A2       :    1.01 p-value of test                       :    0.35   Tests on the sum of all N observations Standardized normal statistic         :    0.45 p-value of test                       :    0.33   Sample variance                       :    1.52 p-value of test                       :    0.13   ----------------------------------------------- CPU time used                    :  00:02:51.88   Generator state:         *********************************************************** HOST = Thijss-iMac.local, Darwin   sitmo     sstring_AutoCor test: -----------------------------------------------    N = 10,  n = 1000000029,  r = 27,   s = 3,   d = 3     -----------------------------------------------   Kolmogorov-Smirnov+ statistic = D+    :   0.079 p-value of test                       :    0.84   Kolmogorov-Smirnov- statistic = D-    :    0.18 p-value of test                       :    0.48   Anderson-Darling statistic = A2       :    0.59 p-value of test                       :    0.65   Tests on the sum of all N observations Standardized normal statistic         :    0.78 p-value of test                       :    0.22   Sample variance                       :    1.85 p-value of test                       :    0.05   ----------------------------------------------- CPU time used                    :  00:02:32.94   Generator state:           ========= Summary results of BigCrush =========    Version:          TestU01 1.2.3  Generator:        sitmo  Number of statistics:  160  Total CPU time:   03:44:06.82    All tests were passed"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"what-is-sitmo-and-can-i-eat-it","dir":"Articles","previous_headings":"","what":"What is sitmo and can I eat it?","title":"Deployment of `sitmo` within C++ Code","text":"sitmo consultancy agency founded Thijs van den Berg. first released Parallel Psuedo Random Number Generator (PPRNG) name using work Salmon, K., et al.’s “Parallel Random Numbers: Easy 1, 2, 3” conference proceedings 2011 International Conference High Performance Computing, Networking, Storage Analysis. Support sitmo exists C++ standards: C++98 C++11. Furthermore, many different PPRNGs available: trng, SPRNG, RngStreams, OMPRNG. However, none appealing eyes sitmo, provides straight forward interface generating psuedo-random numbers (RNG), least restrictive license (MIT), speed. span last years, sitmo agency released two engines interest C++11: threefry vandercorput. threefry engine rewritten PPRNG version sitmo C++11 whereas vandercorput engine provides one dimensional low-discrepancy sequencing. latter engines also available MIT license.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"accessing-and-using-engines-in-sitmo","dir":"Articles","previous_headings":"","what":"Accessing and using engines in sitmo","title":"Deployment of `sitmo` within C++ Code","text":"header files sitmo, threefry, vandercorput engines contained within package. use one engine header files within package, can link sitmo package within description file. e.g. use C++11’s statistical distributions, may want add following src/Makevars src/Makevars.win file: Within C++ file src/, add: need add header file. Pick choose appropriate engine needs. can direct embed application. advise prior though , hence, reason package. breakdown functions available engines. Please note, engine predominantly highlight original: sitmo::prng.","code":"LinkingTo: Rcpp, sitmo Imports:     Rcpp (>= 0.12.11) CXX_STD = CXX11 #include <Rcpp.h> #include <sitmo.h>      // SITMO for C++98 & C++11 PPRNG #include <threefry.h>   // THREEFRY C++11-only PPRNG #include <vandercorput> // VANDERCORPUT C++11-only Low-discrepancy sequence"},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"seed-modifiers","dir":"Articles","previous_headings":"Accessing and using engines in sitmo","what":"Seed modifiers","title":"Deployment of `sitmo` within C++ Code","text":"use seed modifiers, one must first construct engine using method detailed previous table. , engine state can modified using:","code":"// Generate engine called eng_org.  sitmo::prng eng_org;  // Generate engine called eng_org.  sitmo::threefry eng_tf;  // Generate engine called eng_vc.  sitmo::vandercorput eng_vc;"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"misc-seed","dir":"Articles","previous_headings":"Accessing and using engines in sitmo","what":"Misc Seed","title":"Deployment of `sitmo` within C++ Code","text":"Using engine created , one can access additional state information using following:","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"examples","dir":"Articles","previous_headings":"Accessing and using engines in sitmo","what":"Examples","title":"Deployment of `sitmo` within C++ Code","text":"examples displayed vignette taken directly project’s src directory found https://github.com/coatless/sitmo. Additional commentary added.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"hello-world-example","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"Hello World Example","title":"Deployment of `sitmo` within C++ Code","text":"rudimentary example using sitmo. describes process creating sitmo engine obtaining draw.","code":"#include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  //' Example RNG Draws with sitmo //'  //' Shows a basic setup and use case for sitmo.  //'  //' @param n A \\code{unsigned int} is a . //' @return A \\code{vec} with random sequences.  //' @examples //' n = 10 //' sitmo_draws(n) // [[Rcpp::export]] Rcpp::NumericVector sitmo_draws(unsigned int n) {      Rcpp::NumericVector o(n);      // Create a prng engine   sitmo::prng eng;      // Draw from base engine   for (unsigned int i=0; i< n ; ++i){     o(i) = eng();     }    return o; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"setting-a-seed","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"Setting a Seed","title":"Deployment of `sitmo` within C++ Code","text":"ability seed set used.","code":"#include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  //' Example Seed Set and RNG Draws with sitmo //'  //' Shows how to set a seed in sitmo.  //'  //' @param n    An \\code{unsigned int} that dictates how many realizations occur. //' @param seed An \\code{unsigned int} that controls the rng seed.  //' @return A \\code{vector} with random sequences.  //' @examples //' n = 10 //' a = sitmo_engine_seed(n, 1337) //' b = sitmo_engine_seed(n, 1337) //' c = sitmo_engine_seed(n, 1338) //'  //' isTRUE(all.equal(a,b)) //' isTRUE(all.equal(a,c)) // [[Rcpp::export]] Rcpp::NumericVector sitmo_engine_seed(unsigned int n, unsigned int seed) {      // Create Rcpp Matrix   Rcpp::NumericVector o(n);      // Create a prng engine with a specific seed   sitmo::prng eng(static_cast<uint32_t>(seed));      // Draw from base engine   for (unsigned int i=0; i < n; ++i){     o(i) = eng();           }    return o; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"reset-rng-engine","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"Reset RNG engine","title":"Deployment of `sitmo` within C++ Code","text":"code used can found work initial state engine needs reverted.","code":"#include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  //' Example Seed Set and RNG Draws with sitmo //'  //' Shows how to set a seed in sitmo.  //'  //' @param n    An \\code{unsigned int} that dictates how many realizations occur. //' @param seed An \\code{unsigned int} that controls the rng seed.  //' @return A \\code{matrix} with random sequences.  //' @examples //' n = 10 //' a = sitmo_engine_seed(n, 1337) //'  //' isTRUE(all.equal(a[,1],a[,2])) // [[Rcpp::export]] Rcpp::NumericMatrix sitmo_engine_reset(unsigned int n, unsigned int seed) {      // Create Rcpp Vector   Rcpp::NumericMatrix o(n,2);      // Create a prng engine with a specific seed   sitmo::prng eng(static_cast<uint32_t>(seed));      // Draw from base engine   for (unsigned int i=0; i < n ; ++i){     o(i,0) = eng();           }      // Reset seed   eng.seed();      // Draw from base engine   for (unsigned int i=0; i< n ; ++i){     o(i,1) = eng();           }        return o; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"two-rng-streams","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"Two RNG Streams","title":"Deployment of `sitmo` within C++ Code","text":"example displays ability sitmo handle parallel streams rng predefined number streams known.","code":"#include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  //' Two RNG engines running side-by-side //'  //' Shows how to create two separate RNGs and increase them together.  //'  //' @param n     An \\code{unsigned int} that dictates how many realizations occur. //' @param seeds A \\code{vec} containing two integers greater than 0.  //' @return A \\code{matrix} with random sequences.  //' @examples //' n = 10 //' a = sitmo_two_seeds(n, c(1337,1338)) //'  //' b = sitmo_two_seeds(n, c(1337,1337)) //'  //' isTRUE(all.equal(a[,1],a[,2])) //'  //' isTRUE(all.equal(b[,1],b[,2])) //'  //' isTRUE(all.equal(a[,1],b[,1])) // [[Rcpp::export]] Rcpp::NumericMatrix sitmo_two_seeds(unsigned int n, Rcpp::NumericVector seeds) {      if(seeds.size() != 2) Rcpp::stop(\"Need exactly two seeds for this example.\");      // Create Rcpp Matrix   Rcpp::NumericMatrix o(n,2);      // Create a prng engine with a specific seed   sitmo::prng eng1;   eng1.seed(seeds(0));      sitmo::prng eng2;   eng2.seed(seeds(1));    // Draw from base engine   for (unsigned int i=0; i< n ; ++i){     o(i,0) = eng1();           o(i,1) = eng2();           }        return o; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"uniform-random-number-generator","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"Uniform Random Number Generator","title":"Deployment of `sitmo` within C++ Code","text":"C++98, one access C++11 implementation Uniform distribution. particularly problematic lot distribution RNG rely upon able sample \\(\\left[0,1\\right]\\) ala Probability Integral Transformation Theorem. Additional details discussed separate vignette (“Making Uniform PRNG sitmo”).","code":"#include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  //' Random Uniform Number Generator with sitmo //'  //' The function provides an implementation of sampling from a random uniform distribution //'  //' @param n    An \\code{unsigned integer} denoting the number of realizations to generate. //' @param min  A \\code{double} indicating the minimum \\eqn{a} value  //'               in the uniform's interval \\eqn{\\left[a,b\\right]} //' @param max  A \\code{double} indicating the maximum \\eqn{b} value  //'               in the uniform's interval \\eqn{\\left[a,b\\right]} //' @param seed A special \\code{unsigned integer} containing a single seed. //' @return A \\code{vec} containing the realizations. //' @export //' @examples //' a = runif_sitmo(10) // [[Rcpp::export]] Rcpp::NumericVector runif_sitmo(unsigned int n, double min = 0.0, double max = 1.0, uint32_t seed = 1) {   Rcpp::NumericVector o(n);      // Create a prng engine   sitmo::prng eng(seed);   // Obtain the range between max and min   double dis = max - min;       for(int i = 0; i < n; ++i) {     // Sample from the RNG and divide it by the maximum value possible (can also use SITMO_RAND_MAX, which is 4294967295)     // Apply appropriate scale (MAX-MIN)     o[i] = min + ((double) eng() / (sitmo::prng::max())) * (dis);   }      return o; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/sitmo_internals.html","id":"openmp-example","dir":"Articles","previous_headings":"Accessing and using engines in sitmo > Examples","what":"OpenMP Example","title":"Deployment of `sitmo` within C++ Code","text":"One primary reasons sitmo desirable can used parallelization via OpenMP MPI. example used parallel setting generate numbers. Note, ensure code works cross-platform, please protect OpenMP includes package otherwise fail OS X. protect lack OpenMP headers use: writing sections parallelized code, also protect code using: Furthermore, add following Makevars Makevars.win: PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CFLAGS) PKG_CFLAGS = $(SHLIB_OPENMP_CFLAGS) said, let’s take look example parallelization using sitmo:","code":"#ifdef _OPENMP #include <omp.h> #endif #ifdef _OPENMP // multithreaded OpenMP version of code #else // single-threaded version of code #endif #include <Rcpp.h> #include <sitmo.h> // SITMO PPRNG  // [[Rcpp::depends(sitmo)]]  #ifdef _OPENMP #include <omp.h> #endif  // [[Rcpp::plugins(openmp)]]  //' Test Generation using sitmo and C++11 //'  //' The function provides an implementation of creating realizations from the default engine. //'  //' @param n An \\code{unsigned integer} denoting the number of realizations to generate. //' @param seeds A \\code{vec} containing a list of seeds. Each seed is run on its own core. //' @return A \\code{vec} containing the realizations. //' @details //' The following function's true power is only accessible on platforms that support OpenMP (e.g. Windows and Linux). //' However, it does provide a very good example as to how to make ones code applicable across multiple platforms. //'  //' With this being said, how we determine how many cores to split the generation to is governed by the number of seeds supplied. //' In the event that one is using OS X, only the first seed supplied is used.  //'  //' @export //' @examples //' a = sitmo_parallel(10, 5.0, c(1)) //'  //' b = sitmo_parallel(10, 5.0, c(1)) //'  //' c = sitmo_parallel(10, 5.0, c(2)) //'  //' isTRUE(all.equal(a,b)) //'  //' isTRUE(all.equal(a,c)) // [[Rcpp::export]] Rcpp::NumericVector sitmo_parallel(unsigned int n, Rcpp::NumericVector& seeds){       unsigned int ncores = seeds.size();    Rcpp::NumericVector q(n);      #ifdef _OPENMP   #pragma omp parallel num_threads(ncores) if(ncores > 1)   {   #endif        // Engine requires uint32_t inplace of unsigned int     uint32_t active_seed;            // Write the active seed per core or just write one of the seeds.     #ifdef _OPENMP       active_seed = static_cast<uint32_t>(seeds[omp_get_thread_num()]);     #else       active_seed = static_cast<uint32_t>(seeds[0]);     #endif          sitmo::prng eng( active_seed );        // Parallelize the Loop     #ifdef _OPENMP     #pragma omp for schedule(static)     #endif     for (unsigned int i = 0; i < n; i++){       q[i] = eng().      }    #ifdef _OPENMP   }   #endif      return q; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/uniform_rng_with_sitmo.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Making a Uniform PRNG with `sitmo`","text":"Many random number generators various distributions rely Probability Integral Transformation theorem. Succintly stated : Theorem Let \\(X\\) random variable cumulative distribution function (CDF) \\(F_X\\left({x}\\right)\\). , define random variable \\(U = F_X\\left({X}\\right)\\). Thus, \\(U\\) uniform distribution. Proof Given random variable X, define \\(U = F_X\\left({X}\\right)\\). : \\[\\begin{align*} F_U\\left({u}\\right) &= P\\left( {U \\le u} \\right) \\\\    &= P\\left( {{F_X}\\left( X \\right) \\le u} \\right) \\\\    &= P\\left( {X \\le F_X^{ - 1}\\left( u \\right)} \\right) \\\\    &= {F_X}\\left( {F_X^{ - 1}\\left( u \\right)} \\right) \\\\    &= u \\\\ \\end{align*}\\] Therefore, \\(F_U\\left({u}\\right)\\) CDF Uniform(0,1) RV. Hence, \\(U\\) uniform distribution \\([0,1]\\).","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/uniform_rng_with_sitmo.html","id":"random-uniform-distribution-runif-in-c","dir":"Articles","previous_headings":"","what":"Random Uniform Distribution (runif) in C++","title":"Making a Uniform PRNG with `sitmo`","text":"Within R/C++ API, three ways one can use random uniform distribution. use Rcpp’s hook Rmath.h library controls random generation via R::runif(,b) Rcpp’s sugar Rcpp::runif(n,,b). using C++11’s built-generators statistical distributions create uniform real random variable generator. Creating RNG! said, opt focus remainder vignette creation RNG.","code":"#include <Rcpp.h> #include <random>  // [[Rcpp::plugins(cpp11)]]  // [[Rcpp::export]] void test(unsigned int n, double a, double b) {        // Random Seed     std::random_device rd;     // Random engine     std::mt19937 mt(rd());     // Uniform Distribution     std::uniform_real_distribution<double> dist(a, b);      // Generate n realizations     for (unsigned int i=0; i<n; ++i)         Rcpp:Rcout << dist(mt) << std::endl; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/articles/uniform_rng_with_sitmo.html","id":"creating-a-random-uniform-distribution","dir":"Articles","previous_headings":"","what":"Creating a Random Uniform Distribution","title":"Making a Uniform PRNG with `sitmo`","text":"basics creating random uniform distribution follows: generation random numbers \\(R\\) (e.g. 18885, 23945734, 4298034852, ) known maximum/ceiling random number generation \\(\\max\\left(R\\right)\\) (e.g. sitmo::prng::max() SITMO_RAND_MAX) ability scale randomly generated number \\([,b]\\). sitmo provides high quality version 1. shown informally next section means acquiring 2. Thus, one left creating correct scaling equation. particular, equation governed : \\[+ \\frac{R}{{MAX\\left( R \\right)}}\\left( {b - } \\right)\\] implementation using sitmo given follows: verify quality sitmo informal way, can test dependency correlation seeds. , generate number realizations different seeds range. said, consider following code: can visualize data using correlation graph. case, generations diagonal correlation (\\(r = 0\\)) whereas seeds diagonal correlation 1 (\\(r = 1\\)).  Observing correlation graph, note pattern predicted - correlation diagonal - exists. Thus, generation seeds ideal.","code":"#include <Rcpp.h> #include <sitmo.h>  // [[Rcpp::depends(sitmo)]]  //' Random Uniform Number Generator with sitmo //'  //' The function provides an implementation of sampling from a random uniform distribution //'  //' @param n    An \\code{unsigned integer} denoting the number of realizations to generate. //' @param min  A \\code{double} indicating the minimum \\eqn{a} value  //'               in the uniform's interval \\eqn{\\left[a,b\\right]} //' @param max  A \\code{double} indicating the maximum \\eqn{b} value  //'               in the uniform's interval \\eqn{\\left[a,b\\right]} //' @param seed A special \\code{unsigned integer} containing a single seed. //' @return A \\code{vec} containing the realizations. //' @export //' @examples //' a = runif_sitmo(10) // [[Rcpp::export]] Rcpp::NumericVector runif_sitmo(unsigned int n,                                 double min = 0.0, double max = 1.0,                                 uint32_t seed = 1) {   Rcpp::NumericVector o(n);      // Create a prng engine   sitmo::prng eng(seed);      // Obtain the range between max and min   double dis = max - min;       for(unsigned int i = 0; i < n; ++i) {     // Sample from the RNG and divide it by the maximum value possible      // (c.f. SITMO_RAND_MAX, which is 4294967295)     // Apply appropriate scale dis = (MAX-MIN) and add min starting loc     o[i] = min + ((double) eng() / (sitmo::prng::max())) * (dis);   }      return o; } # Load packages library(ggplot2) library(sitmo)  # Number of Observations to Generate n = 1e6  # Number of seeds to try (1 ... S) nseeds = 30  # Storage for seed number and the correlation of the realizations between generators.  cppdf = data.frame(s1 = numeric(nseeds), s2 = numeric(nseeds),                    cor = numeric(nseeds), stringsAsFactors = F)  # Generate observations under the seeds count = 0 for(i in seq_len(nseeds)){   for(j in i:nseeds){     u1 = runif_sitmo(n, 0.0, 1.0, i)     u2 = runif_sitmo(n, 0.0, 1.0, j)     count = count + 1     cppdf[count,] = c(i, j, cor(u1,u2))   } } # Create Correlation Plot ggplot(cppdf) + geom_tile(aes(x = s1, y = s2, fill = cor)) +   xlab(\"Seed 1\") + ylab(\"Seed 2\") +    ggtitle(\"Correlations between seed realizations using `sitmo`\") + theme_bw()"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Balamuta. Author, maintainer, copyright holder. Thijs van den Berg. Author, copyright holder. Ralf Stubner. Contributor.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J, van den Berg T (2023). sitmo: Parallel Pseudo Random Number Generator (PPRNG) 'sitmo' Header Files. R package version 2.0.2, https://r-pkg.thecoatlessprofessor.com/sitmo/, https://github.com/stdfin/random/, https://github.com/coatless-rpkg/sitmo.","code":"@Manual{,   title = {sitmo: Parallel Pseudo Random Number Generator (PPRNG) 'sitmo' Header Files},   author = {James Balamuta and Thijs {van den Berg}},   year = {2023},   note = {R package version 2.0.2, https://r-pkg.thecoatlessprofessor.com/sitmo/, https://github.com/stdfin/random/},   url = {https://github.com/coatless-rpkg/sitmo}, }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"sitmo-a-header-only-package-for-r-containing-sitmo-pprngs","dir":"","previous_headings":"","what":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"repository houses sitmo R package Parallel Psuedo Random Number Generation (PPRNG). package provides way obtain SITMO Consulting’s PPRNG header files via LinkTo.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"installing-sitmo","dir":"","previous_headings":"","what":"Installing sitmo","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"sitmo available CRAN (Stable) GitHub (Development). Using CRAN download install sitmo preferred option significantly stable vs. GitHub version.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"stable-cran-install-instructions","dir":"","previous_headings":"Installing sitmo","what":"Stable (CRAN) Install Instructions","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"install package CRAN, can simply type: package installed available similar fashion R packages. main exception note use sitmo create package need acquire compiler. detailed development install instructions.","code":"install.packages(\"sitmo\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"development-install-instructions","dir":"","previous_headings":"Installing sitmo","what":"Development Install Instructions","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"install package, must first compiler system compatible R. help obtaining compiler consult: macOS Windows compiler hand, one can install package GitHub :","code":"install.packages(\"devtools\")  devtools::install_github(\"coatless/sitmo\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"using-sitmo","dir":"","previous_headings":"","what":"Using sitmo","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"two ways use sitmo. first use sitmo standalone script. script typically built using sourceCpp(). second approach allows sitmo used within R package.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"standalone-file-usage","dir":"","previous_headings":"Using sitmo","what":"Standalone file usage","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"Within C++ file, sitmo package provides Rcpp plugins’ depends statement must included sitmo.h header. plugin statement indicates dependency sitmo. use two engines, threefry vandercorput, must loaded like:","code":"#include <Rcpp.h> #include <sitmo.h>  // [[Rcpp::depends(sitmo)]] #include <Rcpp.h> #include <threefry.h>      // or use #include <vandercorput.h> // [[Rcpp::depends(sitmo)]] // [[Rcpp::plugins(cpp11)]]"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"sitmo-engine-example","dir":"","previous_headings":"Using sitmo > Standalone file usage","what":"sitmo Engine Example","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"hello world example meant show basic implementation sitmo.","code":"#include <Rcpp.h> #include <random>  // C++11 RNG library #include <sitmo.h> // SITMO PPRNG  // Rcpp depends attribute is required for standalone use.  // It is not needed if in package linking to the sitmo package (detailed next). // [[Rcpp::depends(sitmo)]]  // [[Rcpp::export]] Rcpp::NumericVector sitmo_draws_ex(unsigned int n) {      Rcpp::NumericVector o(n);      // Create a prng engine   sitmo::prng eng;      // Draw from base engine   for (unsigned int i=0; i< n ; ++i){     o(i) = eng();     }    return o; }  /*** R sitmo_draws_ex(5) */"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"threefry-engine-example","dir":"","previous_headings":"Using sitmo > Standalone file usage","what":"threefry Engine Example","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"hello world example meant show basic implementation threefry. engine requires C++11.","code":"#include <Rcpp.h> #include <threefry.h>  // Rcpp depends attribute is required for standalone use.  // It is not needed if in package linking to the sitmo package (detailed next). // [[Rcpp::depends(sitmo)]]  // threefry requires access to a C++11 compatible compiler // [[Rcpp::plugins(cpp11)]]  // [[Rcpp::export]] void threefry_draws_streaming(unsigned int n) {     sitmo::threefry eng1, eng2;        eng1.seed(0);  // reset the first engine (not really necessary)     eng2.seed(1);  // 2nd engine gets a different seed       Rcpp::Rcout << \"\\nTwo independent streams.\\n\";     for (unsigned int i = 0; i < n; ++i)         Rcpp::Rcout << eng1() << \" \" << eng2() << \"\\n\"; }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"vandercorput-engine-example","dir":"","previous_headings":"Using sitmo > Standalone file usage","what":"vandercorput Engine Example","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"hello world example meant show basic implementation vandercorput. engine requires C++11.","code":"#include <Rcpp.h> #include <vandercorput.h>  // Rcpp depends attribute is required for standalone use.  // It is not needed if in package linking to the sitmo package (detailed next). // [[Rcpp::depends(sitmo)]]  // vandercorput requires access to a C++11 compatible compiler // [[Rcpp::plugins(cpp11)]]  // [[Rcpp::export]] void vandercorput_draws_streaming(unsigned int n) {     sitmo::vandercorput eng;     for (unsigned int i = 0; i < n; ++i)         Rcpp::Rcout << eng() << \"\\n\";  }"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/index.html","id":"package-usage","dir":"","previous_headings":"Using sitmo","what":"Package usage","title":"Parallel Pseudo Random Number Generator (PPRNG) sitmo Header Files","text":"use sitmo R package, modify DESCRIPTION file adding: use C++11’s statistical distributions, may want add following src/Makevars src/Makevars.win file: Within C++ file src/, add: need add header file. Pick choose appropriate engine needs.","code":"LinkingTo: Rcpp, sitmo Imports:     Rcpp (>= 0.12.11) CXX_STD = CXX11 #include <Rcpp.h> #include <sitmo.h>      // SITMO for C++98 & C++11 PPRNG #include <threefry.h>   // THREEFRY C++11-only PPRNG #include <vandercorput> // VANDERCORPUT C++11-only Low-discrepancy sequence"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Uniform Number Generator using base R — runif_r","title":"Random Uniform Number Generator using base R — runif_r","text":"function provides alternative implementation random uniform distribution sampling using R's rng scope.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Uniform Number Generator using base R — runif_r","text":"","code":"runif_r(n, min = 0, max = 1)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Uniform Number Generator using base R — runif_r","text":"n unsigned integer denoting number realizations generate. min double indicating minimum \\(\\) value  uniform's interval \\(\\left[,b\\right]\\) max double indicating maximum \\(b\\) value  uniform's interval \\(\\left[,b\\right]\\)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Uniform Number Generator using base R — runif_r","text":"","code":"set.seed(134) b = runif_r(10)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_sitmo.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Uniform Number Generator with sitmo — runif_sitmo","title":"Random Uniform Number Generator with sitmo — runif_sitmo","text":"function provides implementation sampling random uniform distribution","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_sitmo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Uniform Number Generator with sitmo — runif_sitmo","text":"","code":"runif_sitmo(n, min = 0, max = 1, seed = 1L)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_sitmo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Uniform Number Generator with sitmo — runif_sitmo","text":"n unsigned integer denoting number realizations generate. min double indicating minimum \\(\\) value  uniform's interval \\(\\left[,b\\right]\\) max double indicating maximum \\(b\\) value  uniform's interval \\(\\left[,b\\right]\\) seed special unsigned integer containing single seed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_sitmo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Uniform Number Generator with sitmo — runif_sitmo","text":"numeric vector containing realizations.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/runif_sitmo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Uniform Number Generator with sitmo — runif_sitmo","text":"","code":"a = runif_sitmo(10)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sitmo: Parallel Pseudo Random Number Generator (PPRNG) 'sitmo' Header Files — sitmo-package","title":"sitmo: Parallel Pseudo Random Number Generator (PPRNG) 'sitmo' Header Files — sitmo-package","text":"Provided within two high quality fast PPRNGs may used 'OpenMP' parallel environment. addition, generator one dimensional low-discrepancy sequence. objective library consolidate distribution 'sitmo' (C++98 & C++11), 'threefry' 'vandercorput' (C++11-) engines CRAN enabling others link header files inside 'sitmo' instead including copy engine within individual package. Lastly, package contains example implementations using 'sitmo' package three accompanying vignette provide additional information.","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sitmo: Parallel Pseudo Random Number Generator (PPRNG) 'sitmo' Header Files — sitmo-package","text":"Maintainer: James Balamuta balamut2@illinois.edu (ORCID) [copyright holder] Authors: Thijs van den Berg thijs@sitmo.com [copyright holder] contributors: Ralf Stubner ralf.stubner@daqana.com [contributor]","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Example RNG Draws with sitmo — sitmo_draws","title":"Example RNG Draws with sitmo — sitmo_draws","text":"Shows basic setup use case sitmo.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example RNG Draws with sitmo — sitmo_draws","text":"","code":"sitmo_draws(n)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example RNG Draws with sitmo — sitmo_draws","text":"n unsigned int .","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example RNG Draws with sitmo — sitmo_draws","text":"vec random sequences.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example RNG Draws with sitmo — sitmo_draws","text":"","code":"n = 10 a = sitmo_draws(n)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","text":"Shows set seed sitmo.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","text":"","code":"sitmo_engine_reset(n, seed)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","text":"n unsigned int dictates many realizations occur. seed unsigned int controls rng seed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","text":"matrix random sequences.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_reset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_reset","text":"","code":"n = 10 a = sitmo_engine_reset(n, 1337)  isTRUE(all.equal(a[,1],a[,2])) #> [1] FALSE"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","text":"Shows set seed sitmo.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","text":"","code":"sitmo_engine_seed(n, seed)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","text":"n unsigned int dictates many realizations occur. seed unsigned int controls rng seed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","text":"vector random sequences.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_engine_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Seed Set and RNG Draws with sitmo — sitmo_engine_seed","text":"","code":"n = 10 a = sitmo_engine_seed(n, 1337) b = sitmo_engine_seed(n, 1337) c = sitmo_engine_seed(n, 1338)  isTRUE(all.equal(a,b)) #> [1] TRUE isTRUE(all.equal(a,c)) #> [1] FALSE"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Generation using sitmo and C++11 — sitmo_parallel","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"function provides implementation creating realizations default engine.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"","code":"sitmo_parallel(n, seeds)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"n unsigned integer denoting number realizations generate. seeds vec containing list seeds. seed run core.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"vec containing realizations.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"following function's true power accessible platforms support OpenMP (e.g. Windows Linux). However, provide good example make ones code applicable across multiple platforms. said, determine many cores split generation governed number seeds supplied. event one using OS X, first seed supplied used.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Generation using sitmo and C++11 — sitmo_parallel","text":"","code":"a = sitmo_parallel(10, c(1))  b = sitmo_parallel(10, c(1,2))  c = sitmo_parallel(10, c(1,2))  # True on only OS X or systems without openmp isTRUE(all.equal(a,b)) #> [1] FALSE  isTRUE(all.equal(b,c)) #> [1] TRUE"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_two_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Two RNG engines running side-by-side — sitmo_two_seeds","title":"Two RNG engines running side-by-side — sitmo_two_seeds","text":"Shows create two separate RNGs increase together.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_two_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two RNG engines running side-by-side — sitmo_two_seeds","text":"","code":"sitmo_two_seeds(n, seeds)"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_two_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two RNG engines running side-by-side — sitmo_two_seeds","text":"n unsigned int dictates many realizations occur. seeds vec containing two integers greater 0.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_two_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two RNG engines running side-by-side — sitmo_two_seeds","text":"matrix random sequences.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/reference/sitmo_two_seeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two RNG engines running side-by-side — sitmo_two_seeds","text":"","code":"n = 10 a = sitmo_two_seeds(n, c(1337, 1338))  b = sitmo_two_seeds(n, c(1337, 1337))  isTRUE(all.equal(a[,1], a[,2])) #> [1] FALSE  isTRUE(all.equal(b[,1], b[,2])) #> [1] TRUE  isTRUE(all.equal(a[,1], b[,1])) #> [1] TRUE"},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-202","dir":"Changelog","previous_headings":"","what":"sitmo 2.0.2","title":"sitmo 2.0.2","text":"CRAN release: 2021-10-13","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"deployment-2-0-2","dir":"Changelog","previous_headings":"","what":"DEPLOYMENT","title":"sitmo 2.0.2","text":"Switched using TravisCI using GitHub Actions.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"bugfixes-2-0-2","dir":"Changelog","previous_headings":"","what":"BUGFIXES","title":"sitmo 2.0.2","text":"Addressed unbalanced chunk delimiters vignette. (thanks yihui/knitr#2057!) Addressed compilation Rcpp 1.0.7 introducing new stream handling.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-201","dir":"Changelog","previous_headings":"","what":"sitmo 2.0.1","title":"sitmo 2.0.1","text":"CRAN release: 2019-01-07","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"changes-2-0-1","dir":"Changelog","previous_headings":"","what":"CHANGES","title":"sitmo 2.0.1","text":"Modified vandercorput.h adding newline end file. Modified Makevars{.win} use $(SHLIB_OPENMP_CXXFLAGS) instead $(SHLIB_OPENMP_CFLAGS) PKG_CXXFLAGS","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"testing-infrastructure-2-0-1","dir":"Changelog","previous_headings":"","what":"TESTING INFRASTRUCTURE","title":"sitmo 2.0.1","text":"Modified .travis.yml compile using cores instead one.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-200","dir":"Changelog","previous_headings":"","what":"sitmo 2.0.0","title":"sitmo 2.0.0","text":"CRAN release: 2018-07-01","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"new-2-0-0","dir":"Changelog","previous_headings":"","what":"NEW","title":"sitmo 2.0.0","text":"Added threefry vandercorput (#9, #10). Added contributor Ralf Stubner (@rstub)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"changes-2-0-0","dir":"Changelog","previous_headings":"","what":"CHANGES","title":"sitmo 2.0.0","text":"Modified threefry fully C++11 compliant. (#11, @rstub) Removed Rcpp.plugin.maker()","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-122","dir":"Changelog","previous_headings":"","what":"sitmo 1.2.2","title":"sitmo 1.2.2","text":"CRAN release: 2017-11-18","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"bugfixes-1-2-2","dir":"Changelog","previous_headings":"","what":"BUGFIXES","title":"sitmo 1.2.2","text":"Addressed import Rcpp.plugin.maker() using exported variable name, e.g. ::, place internal variable name, e.g. ::: (#7). Updated sitmo URL point stdfin/random (#8).","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-121","dir":"Changelog","previous_headings":"","what":"sitmo 1.2.1","title":"sitmo 1.2.1","text":"CRAN release: 2017-07-30","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"bugfixes-1-2-1","dir":"Changelog","previous_headings":"","what":"BUGFIXES","title":"sitmo 1.2.1","text":"Removed extra ; sitmo header quiet compile warnings (#4, thanks @helske) Updated sitmo_two_seeds() src documentation “Deployment sitmo within C++ Code” uses second seed eng2 returns n x 2 matrix instead n x 3. (#5, thanks @helske)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-120","dir":"Changelog","previous_headings":"","what":"sitmo 1.2.0","title":"sitmo 1.2.0","text":"CRAN release: 2017-06-25","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"changes-1-2-0","dir":"Changelog","previous_headings":"","what":"CHANGES","title":"sitmo 1.2.0","text":"Added plugin registration Rcpp:::Rcpp.plugin.maker() (#3) Added CxxFlags() sitmoCxxFlags() functions display CXX_FLAGS required sitmo. (#3) Updated examples README.Rmd SITMO internal vignette use Rcpp depends attribute. (#3)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"bugfixes-1-2-0","dir":"Changelog","previous_headings":"","what":"BUGFIXES","title":"sitmo 1.2.0","text":"Corrected signed unsigned integer comparison “Making Uniform PRNG sitmo” vignette. Fixed notation “Making Uniform PRNG sitmo” vignette.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-110","dir":"Changelog","previous_headings":"","what":"sitmo 1.1.0","title":"sitmo 1.1.0","text":"CRAN release: 2017-04-28","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"changes-1-1-0","dir":"Changelog","previous_headings":"","what":"CHANGES","title":"sitmo 1.1.0","text":"Added src/init.c address R 3.4 C++ registration requirement (#2) Clarified content “Making Uniform PRNG sitmo” vignette.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"sitmo 1.1.0","text":"Addressed signed unsigned integer comparison sitmo header (#1) Corrected URL problematic “Deployment sitmo within C++ Code” vignette.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"sitmo-100","dir":"Changelog","previous_headings":"","what":"sitmo 1.0.0","title":"sitmo 1.0.0","text":"CRAN release: 2016-03-19","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/sitmo/news/index.html","id":"new-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW","title":"sitmo 1.0.0","text":"Embedded sitmo header file R package. Provided code examples using sitmo header file. Deployment sitmo within C++ Code Making Uniform PRNG sitmo sitmo’s BigCrush Results","code":""}]
